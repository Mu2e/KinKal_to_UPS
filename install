#! /bin/bash
#
# Copy files from the source and build areas to create a UPS product.
#
# Arguments:
#  1 - The version of root on which this depends
#  2 - root of the UPS repo into which the product will be installed
#  3 - The qualifier string for the root version
#  4 - not yet implemented - will be additional qualifiers for KinKal
#
# This script unconditionally deletes previously existing installs of the
# same product+version+qualifiers: use with care.
#
# The UPS qualifiers of the new product will be those of the version of
# root on which it depends.
#
# Fixme: add support for additional qualifiers
#

#
# Convert the git tag into UPS version number style
#    Examples: v0.1.1   to v00_01_01
#              v0.100.1 to v00_100_01
# Note: awk printf will expand field width to support numbers larger than 99.
# Fixme: add more error checking and support other style tags, for example
#        a suffix after the version number?
setUPSVersion() {
  nn=`echo $gitversion | awk 'BEGIN{FS="."} { print NF }'`
  if [ "${nn}" != "3" ]; then
     echo "Git version is not in a supported style: " ${gitversion}
     return 1
  fi
  UPS_STYLE_VERSION=`echo $gitversion | sed 's/v//' | awk 'BEGIN{FS="."} { printf ( "v%02d_%02d_%02d\n", $1, $2, $3) }'`
  return 0
}


# Create the UPS qualifiers for the prof and debug versions
#  - 3 versions, needed for different places in UPSology
#       - colon separated
#       - dot separated
#       - underscore separated
setQualifiers(){
  # Sort qualifiers by alphabetical order; xargs is used to strip trailing whitespace
  qualifiers_colons=`echo $rootQuals | sed 's/:/ /g' | tr " " "\n" | sort | tr "\n" " " | xargs | tr " " ":"`
  qualifiers_dots=`echo $qualifiers_colons | sed 's/:/./g'`
  qualifiers_underscores=`echo $qualifiers_colons | sed 's/:/_/g'`
  return 0
}

#--- main ---

gitversion=$1
upsRoot=$2
rootVer=$3
rootQuals=$4

package_name=KinKal
package_source=${PWD}/${package_name}

setUPSVersion
if [[ "$?" != 0 ]]; then
    echo "ERROR - Could not convert the git tag to a UPS version number. The git tag was: " ${gitversion}
    exit 1
fi

setQualifiers
if [[ "$?" != 0 ]]; then
    echo "ERROR - setQualifiers failed: "
    exit 2
fi

# Where to find the files in the installer package
KINKAL_TO_UPS_DIR=`dirname $(readlink -f $0)`

# Intialize UPS repo if needed.
if ! [ -e ${upsRoot} ]; then
  mkdir ${upsRoot}
  cp -r ${KINKAL_TO_UPS_DIR}/.upsfiles ${upsRoot}
  cp -r ${KINKAL_TO_UPS_DIR}/.updfiles ${upsRoot}
fi

# Need this for get-directory-name
setup cetpkgsupport


# There are two representations of operating system UPS flavor:
#   old style, for example: Linux64bit+2.6-2.12_e7
#   new style, for example: slf6.x86_64
# We need them both.
old_flavour=`ups flavor -4`
new_flavour=`get-directory-name subdir`

# Build the names of the directories into which we will write things
fq=${new_flavour}.${qualifiers_dots}
topdir=${upsRoot}/${package_name}
proddir=${upsRoot}/${package_name}/${UPS_STYLE_VERSION}
verdir=${upsRoot}/${package_name}/${UPS_STYLE_VERSION}.version
bindir=${upsRoot}/${package_name}/${UPS_STYLE_VERSION}/${fq}
incdir=${upsRoot}/${package_name}/${UPS_STYLE_VERSION}/include
upsdir=${upsRoot}/${package_name}/${UPS_STYLE_VERSION}/ups

# I am not sure what this file is properly called.
# I am calling it the fqfile, which is short for flavor qualifier file.
fqfile=${verdir}/${old_flavour}_${qualifiers_underscores}

# Make directories, if needed.
if ! [ -e ${topdir} ];then
  mkdir ${topdir}
fi

if ! [ -e ${proddir} ];then
  mkdir ${proddir}
fi

if ! [ -e ${verdir} ];then
  mkdir ${verdir}
fi

# Remove all content that we will recreate.
# Create required directories.
if [ -e ${bindir} ];then
  /bin/rm -rf ${bindir}
fi
mkdir ${bindir}

if [ -e ${incdir} ];then
  /bin/rm -rf ${incdir}
fi
mkdir ${incdir}

if [ -e ${upsdir} ];then
  /bin/rm -rf ${upsdir}
fi
mkdir ${upsdir}

if [ -e ${fqfile} ];then
  /bin/rm -rf ${fqfile}
fi

# Copy the required parts of the source directory to the installation area:

# Header files:
rsync -ar --exclude-from  ${KINKAL_TO_UPS_DIR}/exclude_for_include.txt \
    ${package_source} ${proddir}/include

# UPS table file
${KINKAL_TO_UPS_DIR}/installTableFile ${package_name} ${upsdir}/${package_name}.table ${rootVer} ${rootQuals}

# Libaries and executable binaries
rsync -ar build_prof/lib ${bindir}
rsync -ar build_prof/bin ${bindir}

# A copy of the full source
rsync -ar --exclude-from  ${KINKAL_TO_UPS_DIR}/exclude_for_source.txt \
  ${package_source} ${proddir}/source

# Create the ups fq file.
cat > ${fqfile} <<EOF
FILE = version
PRODUCT = ${package_name}
VERSION = ${UPS_STYLE_VERSION}

#*************************************************
#
FLAVOR = ${old_flavour}
QUALIFIERS = "${qualifiers_colons}"
  DECLARER = `whoami`
  DECLARED = `date +"%Y-%m-%d %H:%M:%S GMT" -u`
  MODIFIER = `whoami`
  MODIFIED = `date +"%Y-%m-%d %H:%M:%S GMT" -u`
  PROD_DIR = ${package_name}/${UPS_STYLE_VERSION}
  UPS_DIR = ups
  TABLE_FILE = ${package_name}.table

EOF

unset old_flavour
unset new_flavour
unset fq
unset topdir
unset proddir
unset verdir
unset bindir
unset incdir
unset upsdir
unset fqfile
